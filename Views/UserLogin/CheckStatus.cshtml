@model FinalProject.Models.VisaStatus

@{
    ViewBag.Title = "CheckStatus";
    Layout = "~/Views/Shared/_LayoutPageUser.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <title>User Signin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/js/all.min.js"></script>
    <link href="~/Content/CSS/CheckStatus.css" rel="stylesheet" />

</head>
<body>

    <section class="vh-100"">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col col-xl-10">
                    <div class="card" style="border-radius: 1rem;">
                        <div class="row g-0">
                            <div class="col-md-6 col-lg-5 d-none d-md-block">
                                <img src="https://images.pexels.com/photos/5405598/pexels-photo-5405598.jpeg?auto=compress&cs=tinysrgb&w=600"
                                     alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem;" />
                            </div>
                            <div class="col-md-6 col-lg-7 d-flex align-items-center">
                                <div class="card-body p-4 p-lg-5 text-black">

                                    <div class="d-flex align-items-center mb-3 pb-1">
                                        <span class="h1 fw-bold mb-0">Check Visa Status</span>
                                    </div>

                                    @if (ViewData["message"] != null)
                                    {
                                        <div class="alert alert-danger">@ViewData["message"]</div>
                                    }

                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-outline mb-4">
                                    @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validateEmail()" } })
                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                    <span id="emailError" class="text-danger"></span>
                                </div>

                                <div class="form-outline mb-4">
                                    @Html.LabelFor(model => model.PassportNumber, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.PassportNumber, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatePassportNumber()" } })
                                    @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
                                    <span id="passportNumberError" class="text-danger"></span>
                                </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Submit" class="btn btn-primary btn-lg btn-block" />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            function preventBack() {
                window.history.forward();
            }
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };

            //Validate emailid
            function validateEmail() {
                var emailID = document.getElementById('EmailID');
                var emailErrorMessage = document.getElementById('emailError');

                if (emailID.value.trim() === '') {
                    emailErrorMessage.textContent = 'Email id is required.';
                } else {
                    emailErrorMessage.textContent = '';
                }
            }

            //validate passport number
            function validatePassportNumber() {
                var passportNumber = document.getElementById('PassportNumber');
                var passportNumberErrorMessage = document.getElementById('passportNumberError');

                if (passportNumber.value.trim() === '') {
                    passportNumberErrorMessage.textContent = 'Passport number is required.';
                } else {
                    passportNumberErrorMessage.textContent = '';
                }
            }
        </script>
    }
</body>
</html>
